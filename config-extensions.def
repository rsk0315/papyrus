# config-extensions.def
#
# IDLE reads several config files to determine user preferences.  This
# file is the default configuration file for IDLE extensions settings.
#
# Each extension must have at least one section, named after the extension
# module. This section must contain an 'enable' item (=1 to enable the
# extension, =0 to disable it), it may contain 'enable_editor' or 'enable_shell'
# items, to apply it only to editor/shell windows, and may also contain any
# other general configuration items for the extension.
#
# Each extension must define at least one section named ExtensionName_bindings
# or ExtensionName_cfgBindings. If present, ExtensionName_bindings defines
# virtual event bindings for the extension that are not user re-configurable.
# If present, ExtensionName_cfgBindings defines virtual event bindings for the
# extension that may be sensibly re-configured.
#
# If there are no keybindings for a menus' virtual events, include lines like
# <<toggle-code-context>>=   (See [CodeContext], below.)
#
# Currently it is necessary to manually modify this file to change extension
# key bindings and default values. To customize, create
# ~/.idlerc/config-extensions.cfg and append the appropriate customized
# section(s).  Those sections will override the defaults in this file.
#
# Note: If a keybinding is already in use when the extension is
# loaded, the extension's virtual event's keybinding will be set to ''.
#
# See config-keys.def for notes on specifying keys and extend.txt for
# information on creating IDLE extensions.

[FormatParagraph]
enable=1
[FormatParagraph_cfgBindings]
format-paragraph=<Alt-Key-q>

[AutoExpand]
enable=1
[AutoExpand_cfgBindings]
expand-word=<Alt-Key-slash>

[ZoomHeight]
enable=1
[ZoomHeight_cfgBindings]
zoom-height=<Alt-Key-2>

[ScriptBinding]
enable=1
enable_shell=0
enable_editor=1
[ScriptBinding_cfgBindings]
run-module=<Key-F5>
check-module=<Alt-Key-x>

[CallTips]
enable=1
[CallTips_cfgBindings]
force-open-calltip=<Control-Key-backslash>
[CallTips_bindings]
try-open-calltip=<KeyRelease-parenleft>
refresh-calltip=<KeyRelease-parenright> <KeyRelease-0>

[ParenMatch]
enable=1
style= expression
flash-delay= 500
bell= 1
[ParenMatch_cfgBindings]
flash-paren=<Control-Key-0>
[ParenMatch_bindings]
paren-closed=<KeyRelease-parenright> <KeyRelease-bracketright> <KeyRelease-braceright>

[AutoComplete]
enable=1
popupwait=2000
include-path=C:\Program Files\mingw-w64\x86_64-5.1.0-win32-seh-rt_v4-rev0\mingw64\x86_64-w64-mingw32\include\c++
[AutoComplete_cfgBindings]
force-open-completions=<Control-Key-space>
[AutoComplete_bindings]
autocomplete=<Key-Tab>
try-open-completions=<KeyRelease-period> <KeyRelease-slash> <KeyRelease-backslash>

[CodeContext]
enable=1
enable_shell=0
numlines=3
visible=0
bgcolor=LightGray
fgcolor=Black
[CodeContext_bindings]
toggle-code-context=

[RstripExtension]
enable=1
enable_shell=0
enable_editor=1

[LineNumber]
enable=1
enable_shell=0
bgcolor=White
fgcolor=Black
visible=0
[LineNumber_bindings]
toggle-line-number=

[CodeSnippet]
enable=1
enable_shell=0
[CodeSnippet_cfgBindings]
code-snippet=<Alt-Key-s>

[InsertTemplate]
enable=1
enable_shell=0
[InsertTemplate_cfgBindings]
insert-template=<Alt-Key-i>

[CompileCode]
enable=1
enable_shell=0
compile_c=gcc -Wall -lm -O2 -o {0}.exe {0}.c
compile_cpp=g++ -Wall -O2 -o {0}.exe {0}.cpp
[CompileCode_cfgBindings]
compile-code=<Key-F11>

[DefaultExtension]
enable=0
defext=cpp

[RunCodeGeneric]
enable=1
enable_shell=0
[RunCodeGeneric_cfgBindings]
run-code-generic=<Key-F7>

[RunCode]
enable=1
enable_shell=0
[RunCode_cfgBindings]
run-code=<Key-F8>

[EditSnippet]
enable=1
enable_shell=0
[EditSnippet_cfgBindings]
edit-snippet=<Alt-Key-n>

[JudgeTestcase]
enable=1
enable_shell=0
[JudgeTestcase_cfgBindings]
judge-testcase=<Key-F9>
